import logging
import os
import sys
from pathlib import Path

from app.config import settings

def setup_logging():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä—ã
    console_formatter = logging.Formatter(
        "%(asctime)s - %(levelname)s - %(name)s - %(message)s"
    )
    file_formatter = logging.Formatter(
        "%(asctime)s - %(levelname)s - %(name)s - %(funcName)s:%(lineno)d - %(message)s"
    )
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π –ª–æ–≥–≥–µ—Ä
    root_logger = logging.getLogger()
    root_logger.setLevel(logging.DEBUG)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–ª—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    
    # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    root_logger.handlers.clear()
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏ (—Ç–æ–ª—å–∫–æ WARNING –∏ –≤—ã—à–µ)
    console_handler = logging.StreamHandler(sys.stdout)
    console_handler.setLevel(logging.WARNING)  # –¢–æ–ª—å–∫–æ WARNING –∏ –≤—ã—à–µ
    console_handler.setFormatter(console_formatter)
    console_handler.set_name("console_handler")
    root_logger.addHandler(console_handler)
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–∞–π–ª–∞ (–≤—Å–µ –ª–æ–≥–∏)
    try:
        # –ë–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
        # –ò—â–µ–º –ø–∞–ø–∫—É —Å main.py –∏–ª–∏ pyproject.toml
        current_file = Path(__file__).resolve()
        project_root = None
        
        # –ü–æ–¥–Ω–∏–º–∞–µ–º—Å—è –ø–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º –≤–≤–µ—Ä—Ö, –ø–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
        for parent in current_file.parents:
            if (parent / "main.py").exists() or (parent / "pyproject.toml").exists():
                project_root = parent
                break
        
        if project_root is None:
            # Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±
            project_root = current_file.parent.parent.parent
        
        logs_dir = project_root / "logs"
        log_file_path = logs_dir / "app.log"

        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        logs_dir.mkdir(parents=True, exist_ok=True)

        file_handler = logging.FileHandler(log_file_path, encoding='utf-8')
        file_handler.setLevel(logging.DEBUG)  # –í—Å–µ –ª–æ–≥–∏ –≤ —Ñ–∞–π–ª
        file_handler.setFormatter(file_formatter)
        file_handler.set_name("file_handler")
        root_logger.addHandler(file_handler)
        
        print(f"‚úÖ Log file created at: {log_file_path}")
        print(f"üìÅ Project root detected as: {project_root}")
        
    except Exception as e:
        print(f"‚ùå Warning: Could not create file handler: {e}")
        # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª–æ–≤—ã–π –ª–æ–≥–≥–µ—Ä, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ç–æ–ª—å–∫–æ —Å –∫–æ–Ω—Å–æ–ª—å–Ω—ã–º
        print("üìù Continuing with console logging only")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
    logging.getLogger("uvicorn.access").setLevel(logging.WARNING)
    logging.getLogger("uvicorn.error").setLevel(logging.WARNING)
    logging.getLogger("httpx").setLevel(logging.WARNING)
    logging.getLogger("urllib3").setLevel(logging.WARNING)
    
    # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    logger = logging.getLogger(__name__)
    logger.info("Logging system initialized successfully")
    logger.warning("‚ö†Ô∏è  Console logging: WARNING and above")
    logger.debug("üîç File logging: ALL levels (this should only appear in file)")
    logger.error("‚ùå Error logging: ERROR and above")
    
    return logger

def get_logger(name: str) -> logging.Logger:
    """–ü–æ–ª—É—á–∏—Ç—å –ª–æ–≥–≥–µ—Ä —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º."""
    return logging.getLogger(name)